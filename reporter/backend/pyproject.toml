[tool.poetry]
name = "reporter"
version = "0.1.0"
description = ""
authors = ["Marek ChaÅ‚abis"]

[tool.poetry.dependencies]
python = "^3.9"
Flask = "^2.0.2"
Flask-SQLAlchemy = "^2.5.1"
Flask-WTF = "^1.0.0"
WTForms = "^3.0.1"
email-validator ="^1.1.3"
Flask-Bcrypt = "^0.7.1"
Flask-Login = "^0.5.0"
marshmallow = "^3.14.1"
psycopg2 = "^2.9.3"
environs = "^9.4.0"
httpx = "^0.21.3"
celery = "^5.2.3"
redis = "^4.1.0"

[tool.poetry.dev-dependencies]
factory-boy = "^3.2.1"
pytest-flask = "^1.2.0"
pytest = "^6.2.5"
pytest-mock = "3.6.1"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.5.0"
pytest-factoryboy = "^2.1.0"
flake8 = "^4.0.1"
flake8-coding = "^1.3.2"
flake8-quotes = "^3.3.1"
flake8-isort = "^4.1.1"
coverage = "^6.2"
pyproject-flake8 = "^0.0.1a2"
safety = "^1.10.3"
black = { version = "^21.12b0", allow-prereleases = true }
mypy = "^0.931"
wemake-python-styleguide = "^0.16.0"

[tool.coverage.run]
branch = true
source = ["./"]
# skip files for coverage
omit = ["tests*", "commands_development.py"]
data_file = ".tests_reports/.coverage"

[tool.coverage.report]
skip_covered = true
show_missing = true
sort = "Cover"
fail_under = 80

[tool.flake8]
allowed-domain-names = "item"
format = "wemake"
show-source = "True"
statistics = "True"
doctests = "True"
enable-extensions = "G"
max-imports = "15"
max-line-length = "88"
max-methods = "10"
max-module-members = "10"

# Flake plugins:
accept-encodings = "utf-8"
inline-quotes = "single"
isort-show-traceback = "True"
multiline-quotes = "'''"

ignore = [
    # C101: Coding magic comment not found
    "C101",
    # D100: Missing docstring in public module
    "D100",
    # D101: Missing docstring in public class
    "D101",
    # D102: Missing docstring in public method
    "D102",
    # D103: Missing docstring in public function
    "D103",
    # D104: Missing docstring in public package
    "D104",
    # D106:  Missing docstring in public nested class
    "D106",
    # D107:  Missing docstring in __init__
    "D107",
    # DAR101: The docstring was not parsed correctly due to a syntax error
    "DAR101",
    # DAR201: The docstring is missing a return from definition
    "DAR201",
    # DAR401: The docstring is missing an exception raised
    "DAR401",
    # WPS114 Found underscored name pattern
    "WPS114",
    # WPS237: Found a too complex `f` string
    "WPS237",
    # WPS305: Found `f` string
    "WPS305",
    # WPS306: Found class without a base class
    "WPS306",
    # WPS317 Found incorrect multi-line parameters
    "WPS317",
    # WPS323: Found `%` string formatting
    "WPS323",
    # Found a line that starts with a dot
    "WPS348",
    # WPS410: Found wrong metadata variable
    "WPS410",
    # WPS412: Found __init__.py module with logic
    "WPS412",
    # WPS432 Found magic number: 80
    "WPS432",
    # W503:  line break before binary operator
    "W503",
]
exclude = [
    ".git",
    "config.py",
    "developmnent_utils",
]
per-file-ignores = """
  */test*.py: S101, S106, WPS202, WPS211, WPS214, WPS226, WPS437
  conftest.py: WPS347, WPS411, WPS440, WPS442, F401, F403
  */**__init__.py: WPS433, E402, F401
  */**enums*.py: WPS115
"""

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
disallow_any_unimported = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
color_output = true
error_summary = true
show_absolute_path = true
show_traceback = true

exclude = [
    "test*"
]

[tool.isort]
line_length = 88
indent = 4
include_trailing_comma = true
use_parentheses = true
multi_line_output = 3
lines_between_types = 1
force_grid_wrap = 2

# add darker if project expand
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
skip-string-normalization = true
isort = true

[build-system]
requires = ["poetry>=1.1.12"]
build-backend = "poetry.masonry.api"

